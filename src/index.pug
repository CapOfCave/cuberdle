doctype html
html(lang="en")
    head
        title Cuberdle
        meta(name="viewport" content="width=device-width, initial-scale=1")
        meta(name="description" content="Cuberdle - A Wordle-inspired game where you are trying to solve a Rubik's Cube in a given move count")
    body
        .container   
            .header 
                h1.title Cuberdle
                button.action-button(onclick='window.actions.showInstructions()') Help  
            #preview.preview
                - var faces = ['left', 'right', 'top', 'bottom', 'back', 'front'], pieces = 26
                #scene.scene
                    #pivot.pivot.centered(style = 'transform: rotateX(-35deg) rotateY(-35deg);')
                        #cube.cube
                            while pieces--
                                .piece
                                    each face in faces
                                        div(class = 'face ' + face)
                #guide
                    - var n = 4
                    while n--
                        div(id = 'anchor' + n data-anchor-index = n class = 'anchor' style = 'transform: translateZ(3px) translateY(-33.33%) rotate(' + (-90 * n) + 'deg) translateY(66.67%)')
            .action-section
                button.action-button(onclick='window.actions.randomMoveButtonClicked()') Make a random move
                button.action-button(onclick='window.actions.undoButtonClicked()') Undo previous move
                button.action-button(onclick='window.actions.clearButtonClicked()') Clear
            #guessSection.guess-section
            .submit-section.action-section
                button.action-button(onclick='window.actions.submitButtonClicked()') Submit
        
        //- Modals
        #modal
            #instructionsModal.modal-dialog
                .modal-header
                    h5 Instructions
                    button.modal-close(onclick="window.actions.closeModal()")
                        <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="nextui-modal-close-icon-svg" aria-hidden="true"><path d="M18 6L6 18M6 6l12 12"></path></svg>
                p Turn the cube to find the turning sequence that solves the cube in the given number of moves!
                p 
                    span All moves are tracked using 
                    a(href="https://ruwix.com/the-rubiks-cube/notation/") Rubik's Cube Notation
                    span . 
                p Example:
                div
                    .move-card.move-card-preview(data-state="present") F 
                    .move-card.move-card-preview(data-state="absent") R 
                    .move-card.move-card-preview(data-state="absent") U 
                    .move-card.move-card-preview(data-state="correct") R' 
                    .move-card.move-card-preview(data-state="absent") U' 
                p Upon submitting, the moves are highlighted as follows:
                .instruction-row
                    .move-card.move-card.move-card-preview-small(data-state="correct") R' 
                    span  means that R' is the fourth move of the solve. There may or may not be additional R' moves in the final solution.
                .instruction-row 
                    .move-card.move-card-preview-small(data-state="present") F
                    span  means that F is found at least once in the final solution, but not at position 1.
                .instruction-row 
                    .move-card.move-card-preview-small(data-state="absent") R
                    span  means that R does not occur in the final solution.
                p Adjacent opposite moves (e. g. R and R') cancel out and won't count towards the solution. 
                p In hard or expert mode, making the same move twice in a row (e. g. F and F) will be combined into one move (F2).
                p Good luck and have fun!
                .action-section
                    button.action-button(onclick="window.actions.closeModal()") Normal Mode
                    button.action-button(disabled) Hard Mode (coming soon)
            #winModal.results-modal.modal-dialog
                .modal-header
                    h5#resultTitle You won!
                    button.modal-close(onclick="window.actions.closeModal()")
                        <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="nextui-modal-close-icon-svg" aria-hidden="true"><path d="M18 6L6 18M6 6l12 12"></path></svg>
                .result-pattern
                p The solution was
                p.solution
                .action-section
                    button.action-button(onclick="window.actions.playAgain()") Play Again
                    button.action-button(onclick="window.actions.shareButtonClicked()") Share
            #lossModal.results-modal.modal-dialog
                .modal-header
                    h5#resultTitle Better luck next time!
                    button.modal-close(onclick="window.actions.closeModal()")
                        <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="nextui-modal-close-icon-svg" aria-hidden="true"><path d="M18 6L6 18M6 6l12 12"></path></svg>
                .result-pattern
                p The solution was
                p.solution
                .action-section
                    button.action-button(onclick="window.actions.playAgain()") Play Again
                    button.action-button(onclick="window.actions.shareButtonClicked()") Share

                    

                    

               
               

